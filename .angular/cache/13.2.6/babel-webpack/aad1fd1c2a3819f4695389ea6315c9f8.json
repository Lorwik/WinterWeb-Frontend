{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport Validation from 'src/app/utils/validation';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/usuario.service\";\nimport * as i3 from \"@angular/router\";\nexport let CambiarpassComponent = /*#__PURE__*/(() => {\n  class CambiarpassComponent {\n    constructor(fb, usuarioService, router) {\n      this.fb = fb;\n      this.usuarioService = usuarioService;\n      this.router = router;\n      this.formSubmitted = false;\n      this.cambiarPassForm = new FormGroup({\n        password: new FormControl(''),\n        newpassword: new FormControl(''),\n        newpassword2: new FormControl('')\n      });\n    }\n\n    ngOnInit() {\n      this.cambiarPassForm = this.fb.group({\n        password: ['', Validators.required],\n        newpassword: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(24)]],\n        newpassword2: ['', Validators.required]\n      }, {\n        validators: [Validation.match('newpassword', 'newpassword2')]\n      });\n    }\n\n    get f() {\n      return this.cambiarPassForm.controls;\n    }\n\n    cambiarPass() {\n      this.formSubmitted = true;\n\n      if (this.cambiarPassForm.invalid) {\n        return;\n      } // Si el formulario es validor realizamos el Posteo\n\n\n      this.usuarioService.cambiarPassword(this.cambiarPassForm.value).subscribe({\n        next: () => {\n          this.router.navigateByUrl('/dashboard');\n        },\n        error: err => {\n          console.log(err); //En el caso de suceder un error  sweetalert2\n\n          Swal.fire('Error', err.error.error, 'error');\n        }\n      });\n    }\n\n  }\n\n  CambiarpassComponent.ɵfac = function CambiarpassComponent_Factory(t) {\n    return new (t || CambiarpassComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UsuarioService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  CambiarpassComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CambiarpassComponent,\n    selectors: [[\"app-cambiarpass\"]],\n    decls: 0,\n    vars: 0,\n    template: function CambiarpassComponent_Template(rf, ctx) {},\n    styles: [\"\"]\n  });\n  return CambiarpassComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}