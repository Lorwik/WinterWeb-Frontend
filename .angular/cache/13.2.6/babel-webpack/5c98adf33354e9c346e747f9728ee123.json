{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport Validation from 'src/app/utils/validation';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/usuario.service\";\nimport * as i3 from \"@angular/router\";\nexport let RegisterComponent = /*#__PURE__*/(() => {\n  class RegisterComponent {\n    constructor(fb, usuarioService, router) {\n      this.fb = fb;\n      this.usuarioService = usuarioService;\n      this.router = router;\n      this.formSubmitted = false;\n      this.registerForm = new FormGroup({\n        username: new FormControl(''),\n        email: new FormControl(''),\n        password: new FormControl(''),\n        password2: new FormControl(''),\n        terminos: new FormControl(false)\n      });\n    }\n\n    ngOnInit() {\n      this.registerForm = this.fb.group({\n        username: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(20)]],\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(24)]],\n        password2: ['', Validators.required],\n        terminos: [false, Validators.requiredTrue]\n      }, {\n        validators: [Validation.match('password', 'password2')]\n      });\n    }\n\n    get f() {\n      return this.registerForm.controls;\n    }\n\n    crearCuenta() {\n      this.formSubmitted = true;\n\n      if (this.registerForm.invalid) {\n        return;\n      } // Si el formulario es validor realizamos el Posteo\n\n\n      this.usuarioService.crearUsuario(this.registerForm.value).subscribe({\n        next: () => {\n          this.router.navigateByUrl('login');\n        },\n        error: err => {\n          //En el caso de suceder un error  sweetalert2\n          Swal.fire('Error', err.error.msg, 'error');\n        }\n      });\n    }\n\n  }\n\n  RegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n    return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UsuarioService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  RegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterComponent,\n    selectors: [[\"app-register\"]],\n    decls: 0,\n    vars: 0,\n    template: function RegisterComponent_Template(rf, ctx) {},\n    styles: [\"@import\\\"https://fonts.googleapis.com/css?family=Numans\\\";html[_ngcontent-%COMP%], body[_ngcontent-%COMP%]{color:#ffffffd5;height:100%;font-family:times new roman,Georgia,Arial,Tahoma}.card[_ngcontent-%COMP%]{margin-top:auto;margin-bottom:auto;background-color:#302c23}.card-header[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{color:#fff}.input-group-prepend[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{width:50px;background-color:#ffc312;color:#000;border:0!important}input[_ngcontent-%COMP%]:focus{outline:0 0 0 0!important;box-shadow:0 0!important}.remember[_ngcontent-%COMP%]{color:#fff}.remember[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{width:20px;height:20px;margin-left:15px;margin-right:5px}#registro_btn[_ngcontent-%COMP%]{color:#000;background:url(/assets/img/buttons/btnregistrar.png) no-repeat;width:150px;height:61px;border-width:0}#registro_btn[_ngcontent-%COMP%]:hover{color:#000;background:url(/assets/img/buttons/btnregistrarpress.png) no-repeat;width:150px;height:61px;border-width:0}.links[_ngcontent-%COMP%]{color:#fff}.links[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{margin-left:4px}\"]\n  });\n  return RegisterComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}