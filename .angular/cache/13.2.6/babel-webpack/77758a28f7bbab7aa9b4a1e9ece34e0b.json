{"ast":null,"code":"import { tap } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\nimport { Usuario } from '../models/usuario.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nconst AUTH_API = `${environment.base_url}/auth/`;\nexport let UsuarioService = /*#__PURE__*/(() => {\n  class UsuarioService {\n    constructor(http, router, ngZone) {\n      this.http = http;\n      this.router = router;\n      this.ngZone = ngZone;\n    }\n\n    crearUsuario(formData) {\n      return this.http.post(`${AUTH_API}register`, formData).pipe(tap(resp => {\n        localStorage.setItem('token', resp.data.token);\n      }));\n    }\n\n    cambiarPassword(formData) {\n      return this.http.post(`${AUTH_API}cambiarpass`, formData).pipe(tap(resp => {\n        localStorage.setItem('token', resp.data.token);\n      }));\n    }\n\n    login(formData) {\n      return this.http.post(`${AUTH_API}login`, formData).pipe(tap(resp => {\n        localStorage.setItem('token', resp.data.token);\n      }));\n    }\n\n    logout() {\n      localStorage.removeItem('token');\n      this.ngZone.run(() => {\n        this.router.navigateByUrl('/login');\n      });\n    }\n\n    listarusuarios() {\n      return this.http.get(`${AUTH_API}listar`).subscribe(resp => {\n        this.usuarios = resp;\n        console.log(this.usuarios);\n      });\n    }\n\n    parseJwt(token) {\n      var base64Url = token.split('.')[1];\n      var base64 = base64Url.replace('-', '+').replace('_', '/');\n      return JSON.parse(window.atob(base64));\n    }\n\n    get isLoggedIn() {\n      return !!localStorage.getItem('token');\n    }\n\n    getToken() {\n      return localStorage.getItem('token') || '';\n    }\n\n    obtenerUsuario() {\n      const {\n        id,\n        username,\n        email,\n        vip,\n        role,\n        updatedAt,\n        createdAt\n      } = this.parseJwt(this.getToken());\n      this.usuario = new Usuario(id, username, email, vip, role, updatedAt, createdAt);\n    }\n\n    getRole() {\n      return this.usuario.role;\n    }\n\n  }\n\n  UsuarioService.ɵfac = function UsuarioService_Factory(t) {\n    return new (t || UsuarioService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i0.NgZone));\n  };\n\n  UsuarioService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UsuarioService,\n    factory: UsuarioService.ɵfac,\n    providedIn: 'root'\n  });\n  return UsuarioService;\n})();","map":null,"metadata":{},"sourceType":"module"}