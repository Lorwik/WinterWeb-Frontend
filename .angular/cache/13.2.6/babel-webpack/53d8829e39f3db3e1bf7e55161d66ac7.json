{"ast":null,"code":"import { catchError, map, tap } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\nimport { Usuario } from '../models/usuario.model';\nimport { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nconst AUTH_API = `${environment.base_url}/auth/`;\nexport let UsuarioService = /*#__PURE__*/(() => {\n  class UsuarioService {\n    constructor(http, router, ngZone) {\n      this.http = http;\n      this.router = router;\n      this.ngZone = ngZone;\n    }\n\n    crearUsuario(formData) {\n      return this.http.post(`${AUTH_API}register`, formData).pipe(tap(resp => {\n        localStorage.setItem('token', resp.data.token);\n      }));\n    }\n\n    login(formData) {\n      return this.http.post(`${AUTH_API}login`, formData).pipe(tap(resp => {\n        localStorage.setItem('token', resp.data.token);\n      }));\n    }\n\n    logout() {\n      localStorage.removeItem('token');\n      this.ngZone.run(() => {\n        this.router.navigateByUrl('/login');\n      });\n    }\n\n    validarToken() {\n      return this.http.get(`${AUTH_API}renewToken`, {\n        headers: {\n          'x-token': this.getToken()\n        }\n      }).pipe(map(resp => {\n        const {\n          id,\n          username,\n          email,\n          lastIP,\n          gemas,\n          vip,\n          role,\n          createdAt,\n          updatedAt\n        } = resp.data.user;\n        this.usuario = new Usuario(id, username, email, lastIP, gemas, vip, role, createdAt, updatedAt);\n        localStorage.setItem('token', resp.data.token);\n      }), catchError(error => of(false)));\n    }\n\n    get isLoggedIn() {\n      return !!localStorage.getItem('token');\n    }\n\n    get usuarioActual() {\n      return this.usuario;\n    }\n\n    getToken() {\n      return localStorage.getItem('token') || '';\n    }\n\n  }\n\n  UsuarioService.ɵfac = function UsuarioService_Factory(t) {\n    return new (t || UsuarioService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i0.NgZone));\n  };\n\n  UsuarioService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UsuarioService,\n    factory: UsuarioService.ɵfac,\n    providedIn: 'root'\n  });\n  return UsuarioService;\n})();","map":null,"metadata":{},"sourceType":"module"}